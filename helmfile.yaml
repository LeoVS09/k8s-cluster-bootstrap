repositories:
  - name: kubernetes-dashboard
    url: https://kubernetes.github.io/dashboard/
  - name: jetstack 
    url: https://charts.jetstack.io
  - name: prometheus-community
    url: https://prometheus-community.github.io/helm-charts

releases:
  # https://cert-manager.io/docs/installation/kubernetes/#installing-with-helm
  - name: cert-manager
    namespace: cert-manager
    createNamespace: true
    chart: jetstack/cert-manager
    version: ^1.3.1
    values:
      - installCRDs: true

  # https://artifacthub.io/packages/helm/k8s-dashboard/kubernetes-dashboard
  - name: kubernetes-dashboard
    namespace: kubernetes-dashboard
    createNamespace: true
    chart: kubernetes-dashboard/kubernetes-dashboard
    version: ^4.2.0
    values:
      - ingress:
          enabled: true
          hosts:
            - dashboard.k8s.local
          annotations:
            # will use stagging issuer for test configuration
            # change to letsencrypt-prod if sure all working correctly
            # lets encrypt can ban production config if you using it for experiments
            cert-manager.io/cluster-issuer: "letsencrypt-staging" 
          tls:
            - hosts:
              - dashboard.k8s.local
              secretName: kubernetes-dashboard-tls
      - metricsScraper: 
          enabled: true
      - metrics-server:
          enabled: true 

  # https://artifacthub.io/packages/helm/prometheus-community/kube-prometheus-stack
  - name: kube-prometheus-stack
    namespace: kube-prometheus-stack
    createNamespace: true
    chart: prometheus-community/kube-prometheus-stack
    version: ^16.1.2
    values:
      # https://github.com/prometheus-community/helm-charts/blob/main/charts/alertmanager/values.yaml
      - alertmanager:
          enabled: false
          config:
            receivers:
              - name: default-receiver
                # https://prometheus.io/docs/alerting/latest/configuration/#receiver
          ingress:
            enabled: false
            ingressClassName: nginx
            hosts:
              - alertmanager.k8s.local
            annotations:
              cert-manager.io/cluster-issuer: "letsencrypt-staging"
            tls:
              - hosts:
                - alertmanager.k8s.local
                secretName: alertmanager-general-tls
      # https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml
      - grafana:
          enabled: true
          adminPassword: prom-operator
          ingress:
            enabled: true
            annotations:
              kubernetes.io/ingress.class: nginx
              cert-manager.io/cluster-issuer: "letsencrypt-staging"
            hosts:
                - grafana.k8s.local
            tls:
              - hosts:
                - grafana.k8s.local
                secretName: grafana-general-tls